{"ast":null,"code":"import { rentModel } from './rent.model'; // importo la classe\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"./driving-list/driving-list.component\";\nimport * as i4 from \"./rented/rented.component\";\nimport * as i5 from \"./rent-list/rent-list.component\";\nfunction AppComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-driving-list\", 3);\n    i0.ɵɵelementStart(2, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_0_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const mezzo_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.noleggia(mezzo_r2));\n    });\n    i0.ɵɵtext(3, \"Noleggia\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const mezzo_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"mezzo\", mezzo_r2);\n  }\n}\nfunction AppComponent_app_rented_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-rented\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"mezzoSelezionato\", ctx_r1.mezzoSelezionato);\n  }\n}\nexport class AppComponent {\n  constructor(http) {\n    this.http = http;\n    this.selezionato = false; //serve per evitare il problema che lui non trovi l'auto selezionata\n    this.mezziNoleggiati = []; //creo il vettore\n    //funzione che inizializza get data\n    this.getData = d => {\n      this.listaMezzi = d;\n      // ciclo for riempie lista mezzi di tutti i veicoli ricevuti dalla richiesta get\n      for (let mezzo of this.listaMezzi) {\n        this.mezziNoleggiati.push(new rentModel(mezzo));\n        console.log(this.mezziNoleggiati);\n      }\n    };\n  } //serve a inizializzare proprieta classe\n  ngOnInit() {\n    this.richiesta();\n  }\n  //il get che prende i dati dal server che in questo caso è il link\n  richiesta() {\n    this.obserMezzi = this.http.get('https://my-json-server.typicode.com/malizia-g/fine_anno_exp/mezzi');\n    this.obserMezzi.subscribe(this.getData);\n  }\n  //visualizza i dettagli nella console\n  noleggia(mezzo) {\n    console.log(mezzo.tipo);\n    console.log(mezzo.descrizione);\n    console.log(mezzo.tariffa);\n    console.log(mezzo.valutazionemedia);\n    this.selezionato = true; //visualizza componente\n    this.mezzoSelezionato = mezzo; //seleziona il mezzo\n    //iniziallizzo mezzo noleggiato\n    let mezzoNoleggiato = new rentModel(this.mezzoSelezionato);\n    //aumento il numero di noleggi del veicolo noleggiato\n    for (let mezzo of this.mezziNoleggiati) {\n      if (mezzo.veicolo.tipo == mezzoNoleggiato.veicolo.tipo) {\n        mezzo.noleggiato();\n      }\n    }\n    return false;\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 3,\n    vars: 3,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [3, \"mezzoSelezionato\", 4, \"ngIf\"], [3, \"mezziNoleggiati\"], [3, \"mezzo\"], [3, \"click\"], [3, \"mezzoSelezionato\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AppComponent_div_0_Template, 4, 1, \"div\", 0);\n        i0.ɵɵtemplate(1, AppComponent_app_rented_1_Template, 1, 1, \"app-rented\", 1);\n        i0.ɵɵelement(2, \"app-rent-list\", 2);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.listaMezzi);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selezionato);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"mezziNoleggiati\", ctx.mezziNoleggiati);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.DrivingListComponent, i4.RentedComponent, i5.RentListComponent],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["rentModel","i0","ɵɵelementStart","ɵɵelement","ɵɵlistener","AppComponent_div_0_Template_button_click_2_listener","restoredCtx","ɵɵrestoreView","_r4","mezzo_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","noleggia","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r1","mezzoSelezionato","AppComponent","constructor","http","selezionato","mezziNoleggiati","getData","d","listaMezzi","mezzo","push","console","log","ngOnInit","richiesta","obserMezzi","get","subscribe","tipo","descrizione","tariffa","valutazionemedia","mezzoNoleggiato","veicolo","noleggiato","_","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵtemplate","AppComponent_div_0_Template","AppComponent_app_rented_1_Template"],"sources":["/workspace/FilaA_Sommativa_Angular/berna/src/app/app.component.ts","/workspace/FilaA_Sommativa_Angular/berna/src/app/app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { drivingList } from './driving.model';\nimport { Observable } from 'rxjs';\nimport { rentModel } from './rent.model'; // importo la classe\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  listaMezzi !: drivingList[];\n  obserMezzi !: Observable<drivingList[]>;\n  selezionato: boolean = false; //serve per evitare il problema che lui non trovi l'auto selezionata\n  mezzoSelezionato !: drivingList;\n  mezziNoleggiati : rentModel[] = []; //creo il vettore\n  constructor(public http: HttpClient) {} //serve a inizializzare proprieta classe\n\n  ngOnInit(): void { //oninit serve per eseguire le istruzioni all'avvio\n    this.richiesta()\n  }\n  //il get che prende i dati dal server che in questo caso è il link\n  richiesta(): void {\n    this.obserMezzi = this.http.get<drivingList[]>('https://my-json-server.typicode.com/malizia-g/fine_anno_exp/mezzi')\n    this.obserMezzi.subscribe(this.getData)\n  }\n  //funzione che inizializza get data\n  getData = (d:drivingList[]) => {\n    this.listaMezzi = d;\n    // ciclo for riempie lista mezzi di tutti i veicoli ricevuti dalla richiesta get\n    for (let mezzo of this.listaMezzi) {\n      this.mezziNoleggiati.push(new rentModel(mezzo))\n      console.log(this.mezziNoleggiati)\n  }\n  }\n  //visualizza i dettagli nella console\n  noleggia(mezzo: drivingList): boolean {\n    console.log(mezzo.tipo)\n    console.log(mezzo.descrizione)\n    console.log(mezzo.tariffa)\n    console.log(mezzo.valutazionemedia)\n    this.selezionato = true; //visualizza componente\n    this.mezzoSelezionato = mezzo; //seleziona il mezzo\n   //iniziallizzo mezzo noleggiato\n    let mezzoNoleggiato = new rentModel(this.mezzoSelezionato)\n   //aumento il numero di noleggi del veicolo noleggiato\n    for (let mezzo of this.mezziNoleggiati) {\n      if (mezzo.veicolo.tipo == mezzoNoleggiato.veicolo.tipo) {\n        mezzo.noleggiato()\n      }\n    }\n    return false\n  }\n}\n\n","<!--serve a visuallizzare driving list i mezzi-->\n<div *ngFor = 'let mezzo of listaMezzi'>\n  <app-driving-list [mezzo] = 'mezzo'></app-driving-list>\n  <button (click) = 'noleggia(mezzo)'>Noleggia</button>\n</div>\n<app-rented [mezzoSelezionato] = 'mezzoSelezionato' *ngIf ='selezionato'></app-rented>\n<app-rent-list [mezziNoleggiati] = 'mezziNoleggiati'></app-rent-list>"],"mappings":"AAIA,SAASA,SAAS,QAAQ,cAAc,CAAC,CAAC;;;;;;;;;;ICH1CC,EAAA,CAAAC,cAAA,UAAwC;IACtCD,EAAA,CAAAE,SAAA,0BAAuD;IACvDF,EAAA,CAAAC,cAAA,gBAAoC;IAA5BD,EAAA,CAAAG,UAAA,mBAAAC,oDAAA;MAAA,MAAAC,WAAA,GAAAL,EAAA,CAAAM,aAAA,CAAAC,GAAA;MAAA,MAAAC,QAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,MAAA,GAAAV,EAAA,CAAAW,aAAA;MAAA,OAAWX,EAAA,CAAAY,WAAA,CAAAF,MAAA,CAAAG,QAAA,CAAAL,QAAA,CAAe;IAAA,EAAC;IAACR,EAAA,CAAAc,MAAA,eAAQ;IAAAd,EAAA,CAAAe,YAAA,EAAS;;;;IADnCf,EAAA,CAAAgB,SAAA,GAAiB;IAAjBhB,EAAA,CAAAiB,UAAA,UAAAT,QAAA,CAAiB;;;;;IAGrCR,EAAA,CAAAE,SAAA,oBAAsF;;;;IAA1EF,EAAA,CAAAiB,UAAA,qBAAAC,MAAA,CAAAC,gBAAA,CAAuC;;;ADMnD,OAAM,MAAOC,YAAY;EAMvBC,YAAmBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHvB,KAAAC,WAAW,GAAY,KAAK,CAAC,CAAC;IAE9B,KAAAC,eAAe,GAAiB,EAAE,CAAC,CAAC;IAWpC;IACA,KAAAC,OAAO,GAAIC,CAAe,IAAI;MAC5B,IAAI,CAACC,UAAU,GAAGD,CAAC;MACnB;MACA,KAAK,IAAIE,KAAK,IAAI,IAAI,CAACD,UAAU,EAAE;QACjC,IAAI,CAACH,eAAe,CAACK,IAAI,CAAC,IAAI9B,SAAS,CAAC6B,KAAK,CAAC,CAAC;QAC/CE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,eAAe,CAAC;;IAErC,CAAC;EAlBqC,CAAC,CAAC;EAExCQ,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,EAAE;EAClB;EACA;EACAA,SAASA,CAAA;IACP,IAAI,CAACC,UAAU,GAAG,IAAI,CAACZ,IAAI,CAACa,GAAG,CAAgB,mEAAmE,CAAC;IACnH,IAAI,CAACD,UAAU,CAACE,SAAS,CAAC,IAAI,CAACX,OAAO,CAAC;EACzC;EAUA;EACAZ,QAAQA,CAACe,KAAkB;IACzBE,OAAO,CAACC,GAAG,CAACH,KAAK,CAACS,IAAI,CAAC;IACvBP,OAAO,CAACC,GAAG,CAACH,KAAK,CAACU,WAAW,CAAC;IAC9BR,OAAO,CAACC,GAAG,CAACH,KAAK,CAACW,OAAO,CAAC;IAC1BT,OAAO,CAACC,GAAG,CAACH,KAAK,CAACY,gBAAgB,CAAC;IACnC,IAAI,CAACjB,WAAW,GAAG,IAAI,CAAC,CAAC;IACzB,IAAI,CAACJ,gBAAgB,GAAGS,KAAK,CAAC,CAAC;IAChC;IACC,IAAIa,eAAe,GAAG,IAAI1C,SAAS,CAAC,IAAI,CAACoB,gBAAgB,CAAC;IAC3D;IACC,KAAK,IAAIS,KAAK,IAAI,IAAI,CAACJ,eAAe,EAAE;MACtC,IAAII,KAAK,CAACc,OAAO,CAACL,IAAI,IAAII,eAAe,CAACC,OAAO,CAACL,IAAI,EAAE;QACtDT,KAAK,CAACe,UAAU,EAAE;;;IAGtB,OAAO,KAAK;EACd;EAAC,QAAAC,CAAA,G;qBA1CUxB,YAAY,EAAApB,EAAA,CAAA6C,iBAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAZ5B,YAAY;IAAA6B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCVzBvD,EAAA,CAAAyD,UAAA,IAAAC,2BAAA,iBAGM;QACN1D,EAAA,CAAAyD,UAAA,IAAAE,kCAAA,wBAAsF;QACtF3D,EAAA,CAAAE,SAAA,uBAAqE;;;QAL5CF,EAAA,CAAAiB,UAAA,YAAAuC,GAAA,CAAA7B,UAAA,CAAa;QAIe3B,EAAA,CAAAgB,SAAA,GAAkB;QAAlBhB,EAAA,CAAAiB,UAAA,SAAAuC,GAAA,CAAAjC,WAAA,CAAkB;QACxDvB,EAAA,CAAAgB,SAAA,GAAqC;QAArChB,EAAA,CAAAiB,UAAA,oBAAAuC,GAAA,CAAAhC,eAAA,CAAqC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}